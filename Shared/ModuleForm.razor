@using LMS.Web.Models

<EditForm Model="@ModuleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />

    <div class="space-y-4">
        <div>
            <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
            <InputText @bind-Value="ModuleModel.Title" 
                      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" 
                      id="title" />
            <ValidationMessage For="@(() => ModuleModel.Title)" class="text-sm text-red-600" />
        </div>

        <div>
            <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
            <InputTextArea @bind-Value="ModuleModel.Description" 
                         class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" 
                         id="description" rows="3" />
            <ValidationMessage For="@(() => ModuleModel.Description)" class="text-sm text-red-600" />
        </div>

        <div>
            <label for="order" class="block text-sm font-medium text-gray-700">Order</label>
            <InputNumber @bind-Value="ModuleModel.Order" 
                       class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" 
                       id="order" />
            <ValidationMessage For="@(() => ModuleModel.Order)" class="text-sm text-red-600" />
        </div>

        <div class="flex justify-end space-x-3 pt-4">
            <button type="button" 
                    class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
                    @onclick="OnCancel">
                Cancel
            </button>
            <button type="submit" 
                    class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700">
                @(ModuleModel.Id == 0 ? "Add Module" : "Save Changes")
            </button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public ModuleModel ModuleModel { get; set; } = new();

    [Parameter]
    public EventCallback<ModuleModel> OnValidSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task HandleSubmit(EditContext context)
    {
        if (context.Validate())
        {
            await OnValidSubmit.InvokeAsync(ModuleModel);
        }
    }
} 