@using System.ComponentModel.DataAnnotations

<EditForm Model="@CourseModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />

    <div class="space-y-6">
        <div>
            <label for="title" class="block text-sm font-medium text-gray-700">Course Title</label>
            <div class="mt-1">
                <InputText @bind-Value="CourseModel.Title" 
                          class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md" 
                          id="title" />
            </div>
            <ValidationMessage For="@(() => CourseModel.Title)" class="text-red-500 text-sm" />
        </div>

        <div>
            <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
            <div class="mt-1">
                <InputTextArea @bind-Value="CourseModel.Description" 
                             class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md" 
                             id="description" 
                             rows="4" />
            </div>
            <ValidationMessage For="@(() => CourseModel.Description)" class="text-red-500 text-sm" />
        </div>

        <div>
            <label for="imageUrl" class="block text-sm font-medium text-gray-700">Image URL</label>
            <div class="mt-1">
                <InputText @bind-Value="CourseModel.ImageUrl" 
                          class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md" 
                          id="imageUrl" />
            </div>
            <ValidationMessage For="@(() => CourseModel.ImageUrl)" class="text-red-500 text-sm" />
        </div>

        <div class="flex justify-end space-x-3">
            <button type="button" 
                    class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                    @onclick="OnCancel">
                Cancel
            </button>
            <button type="submit" 
                    class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                @(CourseModel.Id == 0 ? "Create Course" : "Update Course")
            </button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public CourseModel CourseModel { get; set; } = default!;

    [Parameter]
    public EventCallback<CourseModel> OnValidSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task HandleSubmit(EditContext context)
    {
        if (context.Validate())
        {
            await OnValidSubmit.InvokeAsync(CourseModel);
        }
    }
} 